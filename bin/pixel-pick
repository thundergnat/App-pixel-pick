#!/usr/bin/env perl6

my $version = v0.1;

use GD::Raw;
use File::Temp;

# Control-C exit
signal(SIGINT).tap: { cleanup(); print "\n" xx 50, "\e[H\e[J"; exit(0) }

# Control-Z exit
signal(SIGTSTP).tap: { sleep .3; print "\r  \n"; cleanup(); exit(0) }

my ($x, $y, $scr);
my ($lx, $ly) = 0, 0;
my $indent = '    ';
my ($red, $green, $blue);

multi MAIN () {
    use X11::libxdo;
    my $xdo = Xdo.new;
    loop {
        sleep .01;
        ($x, $y, $scr) = $xdo.get-mouse-location;
        next if $lx == $x and $ly == $y;
        ($lx, $ly) = $x, $y;
        get-pixel();
        display();
    }
    $xdo = ();
}

my %*SUB-MAIN-OPTS = :named-anywhere;

multi MAIN (
    Int $X,    #= Integer x coodinte to pick
    Int $Y,    #= Integer y coordinate to pick
    $q = False #= Boolean "quiet" mode, set to 'h' for hex values
  ) {
    ($x, $y) = +$X, +$Y;
    get-pixel();

    if $q {
        if $q.lc eq 'h' {
             printf "%X:%X:%X\n", $red,$green,$blue;
         } else {
             say "$red:$green:$blue";
         }
    } else {
        display();
        cleanup();
    }
    exit(0);
}

sub get-pixel {
    # tempfile automatically destroyed on exit
    my ($tempfile) = tempfile( :suffix(".png") );

    # import is installed as part of MagickWand. Most Linuxes already
    #  have. If not, need to install libmagickwand
    qqx/import -window root $tempfile/;

    my $fh    = fopen($tempfile, "rb") or die;
    my $image = gdImageCreateFromPng($fh);
    my $pixel = gdImageGetPixel($image, $x, $y);
    ($red,$green,$blue) =
        gdImageRed(  $image, $pixel),
        gdImageGreen($image, $pixel),
        gdImageBlue( $image, $pixel);
    gdImageDestroy($image); # clean up memory
    fclose($fh); # close file handle
}

sub display {
    print "\e[?25l\e[48;2;0;0;0m\e[38;2;255;255;255m\e[H\e[J";
    printf "   v$version | x: %4d y: $y\n", $x;
    printf "{$indent}RGB: %3d  %3d  %3d \n{$indent}HEX: %3X  %3X  %3X\n",
            $red, $green, $blue, $red, $green, $blue;
    print "\e[38;2;{$red};{$green};{$blue}m{$indent}",
           ('â–ˆ' x 18 xx 6).join: "\n{$indent}";
    print "\n\n";
}

sub cleanup { print "\e[0m\e[?25h" }
